<div class="row" id="register-event">
  <%= form_for @event do |f| %>
      <% if event.errors.any? %>
          <div id="error_explanation">
            <h2><%= pluralize(event.errors.count, "error") %> prohibited this event from being saved:</h2>
            <ul>
              <% event.errors.full_messages.each do |message| %>
                  <li>
                    <%= message %>
                  </li>
              <% end %>
            </ul>
          </div>
      <% end %>
      <div class="col-md-1">
      </div>
      <div class="col-md-5">
        <div class="form-group">
          <img id="img_prev" width=300 height=300 src="#" alt="your image" class="img-thumbnail hidden"/>
          <br/>
          <span class="btn btn-default btn-file" id="image-upload-btn">
                  <i class="fa fa-picture-o" aria-hidden="true"></i>
            <%= f.file_field :image, id: "image-upload", title: "Agrega imagenes a tu evento" %>
                  </span>
          <%= f.hidden_field :image_cache %>
        </div>
        <script>
            $(function () {
                function readURL(input) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#img_prev').attr('src', e.target.result)
                        }
                        reader.readAsDataURL(input.files[0]);
                    }
                }

                $("#image-upload").change(function () {
                    $('#img_prev').removeClass('hidden');
                    $('.btn-file').addClass('hidden');

                    readURL(this);
                });
            });
        </script>
        <div class="form-group">
          <%= f.label :Nombre %>
          <%= f.text_field :name, id: :event_name, :required => true %>
        </div>
        <br>
        <div class="form-group">
          <%= f.label :Descripcion %>
          <%= f.text_area :description, id: :event_description, :required => true %>
        </div>
        <br>
        <div class="form-group">
          <%= f.label :category_id %>
          <%= f.select :category_id, options_for_select(@categories), {prompt: 'Seleccione'}, {required: true, class: 'form-control', id: "select_category"} %>
        </div>
      </div>
      <div class="col-md-5">
        <br>
        <div class="form-group">
          <%= f.text_field :address, autofocus: true, class: 'controls', required: true, id: 'pac-input', type: 'text', placeholder: 'Escribe aquÃ­ el luga del evento' %>
          <div id="map"></div>
          <script>

              function initAutocomplete() {
                  var map = new google.maps.Map(document.getElementById('map'), {
                      center: {lat: 4.63858, lng: -74.0841},
                      zoom: 13,
                      mapTypeId: 'roadmap'
                  });

                  // Create the search box and link it to the UI element.
                  var input = document.getElementById('pac-input');
                  var searchBox = new google.maps.places.SearchBox(input);
                  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                  // Bias the SearchBox results towards current map's viewport.
                  map.addListener('bounds_changed', function () {
                      searchBox.setBounds(map.getBounds());
                  });

                  var markers = [];
                  // Listen for the event fired when the user selects a prediction and retrieve
                  // more details for that place.
                  searchBox.addListener('places_changed', function () {
                      var places = searchBox.getPlaces();

                      if (places.length == 0) {
                          return;
                      }

                      // Clear out the old markers.
                      markers.forEach(function (marker) {
                          marker.setMap(null);
                      });
                      markers = [];

                      // For each place, get the icon, name and location.
                      var bounds = new google.maps.LatLngBounds();
                      places.forEach(function (place) {
                          if (!place.geometry) {
                              console.log("Returned place contains no geometry");
                              return;
                          }
                          var icon = {
                              url: place.icon,
                              size: new google.maps.Size(71, 71),
                              origin: new google.maps.Point(0, 0),
                              anchor: new google.maps.Point(17, 34),
                              scaledSize: new google.maps.Size(25, 25)
                          };

                          // Create a marker for each place.
                          markers.push(new google.maps.Marker({
                              map: map,
                              icon: icon,
                              title: place.name,
                              position: place.geometry.location
                          }));

                          if (place.geometry.viewport) {
                              // Only geocodes have viewport.
                              bounds.union(place.geometry.viewport);
                          } else {
                              bounds.extend(place.geometry.location);
                          }
                      });
                      map.fitBounds(bounds);
                  });
              }

          </script>
          <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAL_-qfjE-xEnyhlQ6b76typA86CxqFNU8&libraries=places&callback=initAutocomplete"
                  async defer></script>
        </div>
        <div class="form-group">
          <%= f.label :Publico %>
          <%= f.check_box :published, id: :event_publico %>
        </div>
        <div class="form-group">
          <%= f.label :Cancelado %>
          <%= f.check_box :cancelled, id: :event_cancelled %>
        </div>
        <div class="field date">
          <%= f.label :Fecha_del_evento %>
          <div class="date_select">
            <%= f.text_field :event_date, :id => 'datetimepicker', :value => "#{f.object.event_date.strftime("%d-%m-%Y") unless f.object.new_record?}" %>
          </div>
        </div>
        <br>
        <div class="field date">
          <%= f.label :Fecha_de_finalizacion %>
          <div class="date_select">
            <%= f.text_field :even_end_date, :id => 'datetimepicker2', :value => "#{f.object.even_end_date.strftime("%d-%m-%Y") unless f.object.new_record?}" %>
          </div>
        </div>
      </div>
      <hr>
      <div class="row">
        <div class="col-md-12 center-block">
          <%= button_tag(:class => 'btn btn-lg btn-success center-block') do %>
              <i class="fa fa-calendar-plus-o" aria-hidden="true"> <%= f.object.new_record?? 'Crear evento':'Editar evento'%></i>
          <% end %>
        </div>
      </div>
  <% end -%>
</div>

