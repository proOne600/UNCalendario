function fn(e){return!isNaN(parseInt(e,10))}var fs=require("fs"),join=require("path").join,file=join(__dirname,"fixtures","all_npm.json"),JSONStream=require("../"),it=require("it-is"),expected=JSON.parse(fs.readFileSync(file)),parser=JSONStream.parse(["rows",fn]),called=0,ended=!1,parsed=[];fs.createReadStream(file).pipe(parser),parser.on("data",function(e){called++,it.has({id:it["typeof"]("string"),value:{rev:it["typeof"]("string")},key:it["typeof"]("string")}),parsed.push(e)}),parser.on("end",function(){ended=!0}),process.on("exit",function(){it(called).equal(expected.rows.length),it(parsed).deepEqual(expected.rows),console.error("PASSED")});