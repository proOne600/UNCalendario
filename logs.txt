PRIMERA TERMINAL: David Rico
SEGUNDA TERMINAL: Daniel Cifuentes
TERCERA TERMINAL: Miguel Tovar
CUARTA TERMINAL: Brayan Angarita

# Para empezar a trabajar hacen cd UNCalendario, y luego git checkout develop. Para revisar el server deben especificar el localhost, rails s -b 0.0.0.0, en caso de no conectar
# se van a Preview y le dan en Preview Running Aplication.

# Para ver los users que ya estan el la data base, corren la consola de rails(rails console) y colocan User.all

# A continuacion coloquen lo que van haciendo o lo que ya hicieron, ademas de los comandos que utilizaron, para poder tener el registro de que tenemos y que nos falta.

DAVID RICO: Se crearon las branch develop y sprint-1.
DAVID RICO: Configure la aplicación de Rails del proyecto, para que use en el entorno de desarrollo y testing la gema de SQLITE para base de datos
            y en producción la gema de POSTGRESQL. Para colocar la base de datos tal y como la piden (ya lo hice), modifican el archivo "database.yml",
            que se encuentra en /config/ y en production cambian los datos que le da la app que creamos en heroku. Abren la app, le dan en resources, luego donde dice
            heroku postgres, van a la pestaña settings y le dan donde dice view credentials, y acoplan la base de datoscon los datos que dicen
            ahi.
DAVID RICO: Añadi el remoto de Heroku pueden revisar con el comando git remote -v. Ya hice el push al remoto de heroku.
DAVID RICO: Instale la Gem Devise, pueden ver lo en el Gemfile. Defini las opciones de url predeterminadas en los archivos de entorno. que esta en
            config/environments/development.rb. Agrege unas notificaciones de alerta en los layouts de la aplicacion, app/views/layouts/application.html.erb ademas unas
            views basica para verificar funcionalidad.
DAVID RICO: Funcionalidad verificada del user con Device (sign_in, sign_up, sign_out). Cree la carpeta /docs/mockups y coloque ahi los todos los mockups que estaban en
			el drive.
BRYAN ANGARITA: Se crearon vistas, de Landspace, Registro, Sign in y Contacto, sin aún poder conectar Landscape y Contacto

MIGUEL TOVAR: Se creo el scaffold "event", esperando a configurar el id para que se autogenere ascendentemente. Ya que cometi errores,
            para solucionarlos, borre el scaffold 'rails destroy scaffold event' y la migracion 'rails d migrate create_events'. Con esto 
            se puede crear el nuevo scaffold con las correcciones necesarias.
DAVID RICO: Se instalo la gem 'omniauth-google-oauth2', que es para poder utilizar las credenciales del API de Login de Google.
MIGUEL TOVAR: http://fernando-gaitan.com.ar/ruby-on-rails-parte-16-relaciones-en-los-modelos/


MIGUEL TOVAR(ERRORES DESPUES DE SPRINT 3):
- Carga de archivos: Revisar instalacion y uso de gema carrierwave, apesar de que realize todos llos pasos, carga el archivo pero este no se guarda
    en la carpeta uploads.
- Crear comentario: Necesita que se le pase el evento al que pertenece, no solo el id del evento, sino el evento como tal.
- Crear calificacion y Opcion asistire: Hay un problema en la rutas, se necesita que pasen por 'events/:id' para que sea pliquen solo al evento actual,
    pero dicha ruta ya esta siendo usada por get_pdf y no deja que se le asigne una ruta diferente. Por lo cual no puede acceder a la opciones
    de ASISTIR.
    
    